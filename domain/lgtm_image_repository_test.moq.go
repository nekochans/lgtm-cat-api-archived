// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package domain

import (
	"context"
	"sync"
)

// Ensure, that LgtmImageRepositoryMock does implement LgtmImageRepository.
// If this is not the case, regenerate this file with moq.
var _ LgtmImageRepository = &LgtmImageRepositoryMock{}

// LgtmImageRepositoryMock is a mock implementation of LgtmImageRepository.
//
//	func TestSomethingThatUsesLgtmImageRepository(t *testing.T) {
//
//		// make and configure a mocked LgtmImageRepository
//		mockedLgtmImageRepository := &LgtmImageRepositoryMock{
//			FindAllIdsFunc: func(contextMoqParam context.Context) ([]int32, error) {
//				panic("mock out the FindAllIds method")
//			},
//			FindByIdsFunc: func(contextMoqParam context.Context, int32s []int32) ([]LgtmImageObject, error) {
//				panic("mock out the FindByIds method")
//			},
//			FindRecentlyCreatedFunc: func(contextMoqParam context.Context, n int) ([]LgtmImageObject, error) {
//				panic("mock out the FindRecentlyCreated method")
//			},
//		}
//
//		// use mockedLgtmImageRepository in code that requires LgtmImageRepository
//		// and then make assertions.
//
//	}
type LgtmImageRepositoryMock struct {
	// FindAllIdsFunc mocks the FindAllIds method.
	FindAllIdsFunc func(contextMoqParam context.Context) ([]int32, error)

	// FindByIdsFunc mocks the FindByIds method.
	FindByIdsFunc func(contextMoqParam context.Context, int32s []int32) ([]LgtmImageObject, error)

	// FindRecentlyCreatedFunc mocks the FindRecentlyCreated method.
	FindRecentlyCreatedFunc func(contextMoqParam context.Context, n int) ([]LgtmImageObject, error)

	// calls tracks calls to the methods.
	calls struct {
		// FindAllIds holds details about calls to the FindAllIds method.
		FindAllIds []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
		}
		// FindByIds holds details about calls to the FindByIds method.
		FindByIds []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// Int32s is the int32s argument value.
			Int32s []int32
		}
		// FindRecentlyCreated holds details about calls to the FindRecentlyCreated method.
		FindRecentlyCreated []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// N is the n argument value.
			N int
		}
	}
	lockFindAllIds          sync.RWMutex
	lockFindByIds           sync.RWMutex
	lockFindRecentlyCreated sync.RWMutex
}

// FindAllIds calls FindAllIdsFunc.
func (mock *LgtmImageRepositoryMock) FindAllIds(contextMoqParam context.Context) ([]int32, error) {
	if mock.FindAllIdsFunc == nil {
		panic("LgtmImageRepositoryMock.FindAllIdsFunc: method is nil but LgtmImageRepository.FindAllIds was just called")
	}
	callInfo := struct {
		ContextMoqParam context.Context
	}{
		ContextMoqParam: contextMoqParam,
	}
	mock.lockFindAllIds.Lock()
	mock.calls.FindAllIds = append(mock.calls.FindAllIds, callInfo)
	mock.lockFindAllIds.Unlock()
	return mock.FindAllIdsFunc(contextMoqParam)
}

// FindAllIdsCalls gets all the calls that were made to FindAllIds.
// Check the length with:
//
//	len(mockedLgtmImageRepository.FindAllIdsCalls())
func (mock *LgtmImageRepositoryMock) FindAllIdsCalls() []struct {
	ContextMoqParam context.Context
} {
	var calls []struct {
		ContextMoqParam context.Context
	}
	mock.lockFindAllIds.RLock()
	calls = mock.calls.FindAllIds
	mock.lockFindAllIds.RUnlock()
	return calls
}

// FindByIds calls FindByIdsFunc.
func (mock *LgtmImageRepositoryMock) FindByIds(contextMoqParam context.Context, int32s []int32) ([]LgtmImageObject, error) {
	if mock.FindByIdsFunc == nil {
		panic("LgtmImageRepositoryMock.FindByIdsFunc: method is nil but LgtmImageRepository.FindByIds was just called")
	}
	callInfo := struct {
		ContextMoqParam context.Context
		Int32s          []int32
	}{
		ContextMoqParam: contextMoqParam,
		Int32s:          int32s,
	}
	mock.lockFindByIds.Lock()
	mock.calls.FindByIds = append(mock.calls.FindByIds, callInfo)
	mock.lockFindByIds.Unlock()
	return mock.FindByIdsFunc(contextMoqParam, int32s)
}

// FindByIdsCalls gets all the calls that were made to FindByIds.
// Check the length with:
//
//	len(mockedLgtmImageRepository.FindByIdsCalls())
func (mock *LgtmImageRepositoryMock) FindByIdsCalls() []struct {
	ContextMoqParam context.Context
	Int32s          []int32
} {
	var calls []struct {
		ContextMoqParam context.Context
		Int32s          []int32
	}
	mock.lockFindByIds.RLock()
	calls = mock.calls.FindByIds
	mock.lockFindByIds.RUnlock()
	return calls
}

// FindRecentlyCreated calls FindRecentlyCreatedFunc.
func (mock *LgtmImageRepositoryMock) FindRecentlyCreated(contextMoqParam context.Context, n int) ([]LgtmImageObject, error) {
	if mock.FindRecentlyCreatedFunc == nil {
		panic("LgtmImageRepositoryMock.FindRecentlyCreatedFunc: method is nil but LgtmImageRepository.FindRecentlyCreated was just called")
	}
	callInfo := struct {
		ContextMoqParam context.Context
		N               int
	}{
		ContextMoqParam: contextMoqParam,
		N:               n,
	}
	mock.lockFindRecentlyCreated.Lock()
	mock.calls.FindRecentlyCreated = append(mock.calls.FindRecentlyCreated, callInfo)
	mock.lockFindRecentlyCreated.Unlock()
	return mock.FindRecentlyCreatedFunc(contextMoqParam, n)
}

// FindRecentlyCreatedCalls gets all the calls that were made to FindRecentlyCreated.
// Check the length with:
//
//	len(mockedLgtmImageRepository.FindRecentlyCreatedCalls())
func (mock *LgtmImageRepositoryMock) FindRecentlyCreatedCalls() []struct {
	ContextMoqParam context.Context
	N               int
} {
	var calls []struct {
		ContextMoqParam context.Context
		N               int
	}
	mock.lockFindRecentlyCreated.RLock()
	calls = mock.calls.FindRecentlyCreated
	mock.lockFindRecentlyCreated.RUnlock()
	return calls
}
